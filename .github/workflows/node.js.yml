# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Jest_API & Playwright_UI test

on:
  workflow_dispatch:
  push:
    branches: [ "master", "develop", "develop_api" ]
  pull_request:
    branches: [ "master" ]

permissions:
  checks: write
  contents: write
  pages: write
  id-token: write
  deployments: write

jobs:
  build:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Update dependencies
      run: npm update
    - name: Run Jest api_tests
      run: npm run test:api
    - name: Upload api_tests artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: jest-report
        if-no-files-found: error
        path: ./reports/jest/
        retention-days: 30
    - name: Install Browsers for Playwright ui_tests
      run: npx playwright install --with-deps
    - name: Run Playwright ui_tests
      run: npx playwright test
    - name: Upload ui_tests artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        if-no-files-found: error
        path: ./reports/playwright/
        retention-days: 30
    - name: Upload united artifacts for github-pages
      if: always()
      uses: actions/upload-pages-artifact@v1
      with:
        path: 'reports'
    - name: Deploy united artifacts on github-pages
      uses: JamesIves/github-pages-deploy-action@v4
      continue-on-error: true
      with:
        folder: reports
        clean: true
        token: ${{ secrets.TOKEN }}
    - name: send telegram message on push
      uses: appleboy/telegram-action@master
      with:
        to: -${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          ${{ github.actor }} created commit:
          Commit message: ${{ github.event.commits[0].message }}

          Repository: ${{ github.repository }}

          View the changes by link: https://github.com/${{ github.repository }}/commit/${{github.sha}}

          View the report after five minutes by link: https://pavdem2012.github.io/graduationProject/